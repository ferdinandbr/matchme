## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: eligendi
        type: string
      password:
        name: password
        description: ''
        required: true
        example: accusamus
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be between 2 and 100 characters.'
        required: true
        example: hplvskugwgeevkmmninspsrmkymzmhqnozxtwroarjenrtyroactdkxrrxnbzagsb
        type: string
      last_name:
        name: last_name
        description: 'Must be between 2 and 100 characters.'
        required: true
        example: annvxnnjijowpehfhmbjspvqpwvwblgpzinelldicddmyivrrkx
        type: string
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 100 characters.'
        required: true
        example: onkvlndtwngspefgwvsleaukwqhgbedjkmzptbmurvn
        type: string
      gender:
        name: gender
        description: 'Must not be greater than 1 characters.'
        required: true
        example: ''
        type: string
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: ''
        type: string
      inviteCode:
        name: inviteCode
        description: ''
        required: true
        example: optio
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      0: GET
      2: POST
      3: PUT
      4: PATCH
      5: DELETE
      6: OPTIONS
    uri: 'api/{any}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      any:
        name: any
        description: ''
        required: true
        example: consequatur
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 404
        content: '{"response":"Route not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'POST, GET, OPTIONS, PUT, DELETE'
          access-control-allow-headers: 'Content-Type, Accept, Authorization, X-Requested-With, Application'
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/refresh
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/react
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      userReactedId:
        name: userReactedId
        description: ''
        required: true
        example: 18
        type: integer
      reactionId:
        name: reactionId
        description: ''
        required: true
        example: 18
        type: integer
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Autoriza\u00e7\u00e3o de sess\u00e3o n\u00e3o encontrada. Fa\u00e7a Login novamente para continuar!"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'POST, GET, OPTIONS, PUT, DELETE'
          access-control-allow-headers: 'Content-Type, Accept, Authorization, X-Requested-With, Application'
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/search
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: natus
        type: string
    responses: []
    responseFields: []
